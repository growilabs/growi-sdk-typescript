{
  "openapi": "3.0.1",
  "info": {
    "title": "GROWI REST API v1",
    "version": "7.2.6-RC.0"
  },
  "servers": [
    {
      "url": "https://demo.growi.org/_api"
    }
  ],
  "security": [
    {
      "bearer": [],
      "accessTokenInQuery": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Access token generated by each GROWI users"
      },
      "accessTokenInQuery": {
        "type": "apiKey",
        "name": "access_token",
        "in": "query",
        "description": "Access token generated by each GROWI users"
      }
    },
    "schemas": {
      "Comment": {
        "description": "Comment",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "revision ID",
            "example": "5e079a0a0afa6700170a75fb"
          },
          "__v": {
            "type": "number",
            "description": "DB record version",
            "example": 0
          },
          "page": {
            "$ref": "#/components/schemas/Page/properties/_id"
          },
          "creator": {
            "$ref": "#/components/schemas/User/properties/_id"
          },
          "revision": {
            "$ref": "#/components/schemas/Revision/properties/_id"
          },
          "comment": {
            "type": "string",
            "description": "comment",
            "example": "good"
          },
          "commentPosition": {
            "type": "number",
            "description": "comment position",
            "example": 0
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          }
        }
      },
      "UpdatePost": {
        "description": "UpdatePost",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "update post ID",
            "example": "5e0734e472560e001761fa68"
          },
          "__v": {
            "type": "number",
            "description": "DB record version",
            "example": 0
          },
          "pathPattern": {
            "type": "string",
            "description": "path pattern",
            "example": "/test"
          },
          "patternPrefix": {
            "type": "string",
            "description": "patternPrefix prefix",
            "example": "/"
          },
          "patternPrefix2": {
            "type": "string",
            "description": "path",
            "example": "test"
          },
          "channel": {
            "type": "string",
            "description": "channel",
            "example": "general"
          },
          "provider": {
            "type": "string",
            "description": "provider",
            "enum": [
              "slack"
            ],
            "example": "slack"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          }
        }
      },
      "ElasticsearchResult": {
        "description": "Elasticsearch result v1",
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "took": {
                "type": "number",
                "description": "Time Elasticsearch took to execute a search(milliseconds)",
                "example": 34
              },
              "total": {
                "type": "number",
                "description": "Number of documents matching search criteria",
                "example": 2
              },
              "results": {
                "type": "number",
                "description": "Actual array length of search results",
                "example": 2
              }
            }
          }
        }
      },
      "Tags": {
        "description": "Tags",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag/properties/name"
        },
        "example": [
          "daily",
          "report",
          "tips"
        ]
      },
      "Tag": {
        "description": "Tag",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "tag ID",
            "example": "5e2d6aede35da4004ef7e0b7"
          },
          "name": {
            "type": "string",
            "description": "tag name",
            "example": "daily"
          },
          "count": {
            "type": "number",
            "description": "Count of tagged pages",
            "example": 3
          }
        }
      },
      "User": {
        "description": "User",
        "type": "object",
        "properties": {
          "__v": {
            "type": "number",
            "description": "record version",
            "example": 0
          },
          "_id": {
            "type": "string",
            "description": "user ID",
            "example": "5ae5fccfc5577b0004dbd8ab"
          },
          "lang": {
            "type": "string",
            "description": "language",
            "example": "en_US"
          },
          "status": {
            "type": "integer",
            "description": "status",
            "example": 0
          },
          "admin": {
            "type": "boolean",
            "description": "whether the admin",
            "example": false
          },
          "email": {
            "type": "string",
            "description": "E-Mail address",
            "example": "alice@aaa.aaa"
          },
          "username": {
            "type": "string",
            "description": "username",
            "example": "alice"
          },
          "name": {
            "type": "string",
            "description": "full name",
            "example": "Alice"
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          }
        }
      },
      "Attachment": {
        "description": "Attachment",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "attachment ID",
            "example": "5e0734e072560e001761fa67"
          },
          "__v": {
            "type": "number",
            "description": "attachment version",
            "example": 0
          },
          "fileFormat": {
            "type": "string",
            "description": "file format in MIME",
            "example": "text/plain"
          },
          "fileName": {
            "type": "string",
            "description": "file name",
            "example": "601b7c59d43a042c0117e08dd37aad0aimage.txt"
          },
          "originalName": {
            "type": "string",
            "description": "original file name",
            "example": "file.txt"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "page": {
            "type": "string",
            "description": "page ID attached at",
            "example": "5e07345972560e001761fa63"
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          },
          "fileSize": {
            "type": "number",
            "description": "file size",
            "example": 3494332
          },
          "url": {
            "type": "string",
            "description": "attachment URL",
            "example": "http://localhost/files/5e0734e072560e001761fa67"
          },
          "filePathProxied": {
            "type": "string",
            "description": "file path proxied",
            "example": "/attachment/5e0734e072560e001761fa67"
          },
          "downloadPathProxied": {
            "type": "string",
            "description": "download path proxied",
            "example": "/download/5e0734e072560e001761fa67"
          }
        }
      },
      "AttachmentProfile": {
        "description": "Attachment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "attachment ID",
            "example": "5e0734e072560e001761fa67"
          },
          "_id": {
            "type": "string",
            "description": "attachment ID",
            "example": "5e0734e072560e001761fa67"
          },
          "__v": {
            "type": "number",
            "description": "attachment version",
            "example": 0
          },
          "fileFormat": {
            "type": "string",
            "description": "file format in MIME",
            "example": "image/png"
          },
          "fileName": {
            "type": "string",
            "description": "file name",
            "example": "601b7c59d43a042c0117e08dd37aad0a.png"
          },
          "originalName": {
            "type": "string",
            "description": "original file name",
            "example": "profile.png"
          },
          "creator": {
            "$ref": "#/components/schemas/User/properties/_id"
          },
          "page": {
            "type": "string",
            "description": "page ID attached at",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          },
          "fileSize": {
            "type": "number",
            "description": "file size",
            "example": 3494332
          },
          "filePathProxied": {
            "type": "string",
            "description": "file path proxied",
            "example": "/attachment/5e0734e072560e001761fa67"
          },
          "downloadPathProxied": {
            "type": "string",
            "description": "download path proxied",
            "example": "/download/5e0734e072560e001761fa67"
          }
        }
      },
      "ErrorV3": {
        "description": "Error for APIv3",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "error message"
          },
          "code": {
            "type": "string",
            "example": "someapi-error-with-something"
          },
          "stack": {
            "type": "object"
          },
          "args": {
            "type": "object",
            "example": {
              "name": "Josh",
              "age": 20
            }
          }
        }
      },
      "Page": {
        "description": "Page",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "page ID",
            "example": "5e07345972560e001761fa63"
          },
          "__v": {
            "type": "number",
            "description": "DB record version",
            "example": 0
          },
          "commentCount": {
            "type": "number",
            "description": "count of comments",
            "example": 3
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "extended": {
            "type": "object",
            "description": "extend data",
            "example": {}
          },
          "grant": {
            "type": "number",
            "description": "grant",
            "example": 1
          },
          "grantedUsers": {
            "type": "array",
            "description": "granted users",
            "items": {
              "type": "string",
              "description": "user ID"
            },
            "example": [
              "5ae5fccfc5577b0004dbd8ab"
            ]
          },
          "lastUpdateUser": {
            "$ref": "#/components/schemas/User"
          },
          "liker": {
            "type": "array",
            "description": "granted users",
            "items": {
              "type": "string",
              "description": "user ID"
            },
            "example": []
          },
          "path": {
            "type": "string",
            "description": "page path",
            "example": "/"
          },
          "revision": {
            "type": "string",
            "description": "page revision"
          },
          "seenUsers": {
            "type": "array",
            "description": "granted users",
            "items": {
              "type": "string",
              "description": "user ID"
            },
            "example": [
              "5ae5fccfc5577b0004dbd8ab"
            ]
          },
          "status": {
            "type": "string",
            "description": "status",
            "enum": [
              "wip",
              "published",
              "deleted",
              "deprecated"
            ],
            "example": "published"
          },
          "updatedAt": {
            "type": "string",
            "description": "date updated at",
            "example": "2010-01-01T00:00:00.000Z"
          }
        }
      },
      "PaginateResult": {
        "description": "PaginateResult",
        "type": "object",
        "properties": {
          "docs": {
            "type": "array",
            "description": "Array of documents",
            "items": {
              "type": "object"
            }
          },
          "totalDocs": {
            "type": "number",
            "description": "Total number of documents in collection that match a query"
          },
          "limit": {
            "type": "number",
            "description": "Limit that was used"
          },
          "hasPrevPage": {
            "type": "number",
            "description": "Availability of prev page."
          },
          "hasNextPage": {
            "type": "number",
            "description": "Availability of next page."
          },
          "page": {
            "type": "number",
            "description": "Current page number"
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages."
          },
          "offset": {
            "type": "number",
            "description": "Only if specified or default page/offset values were used"
          },
          "prefPage": {
            "type": "number",
            "description": "Previous page number if available or NULL"
          },
          "nextPage": {
            "type": "number",
            "description": "Next page number if available or NULL"
          },
          "pagingCounter": {
            "type": "number",
            "description": "The starting sl. number of first document."
          },
          "meta": {
            "type": "number",
            "description": "Object of pagination meta data (Default false)."
          }
        }
      },
      "V1PaginateResult": {
        "description": "Paginate result v1",
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of documents in collection that match a query",
                "example": 35
              },
              "limit": {
                "type": "integer",
                "description": "Limit that was used",
                "example": 10
              },
              "offset": {
                "type": "integer",
                "description": "Only if specified or default page/offset values were used",
                "example": 20
              }
            }
          },
          "data": {
            "type": "object",
            "description": "Object of pagination meta data."
          }
        }
      },
      "Revision": {
        "description": "Revision",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "revision ID",
            "example": "5e0734e472560e001761fa68"
          },
          "__v": {
            "type": "number",
            "description": "DB record version",
            "example": 0
          },
          "author": {
            "$ref": "#/components/schemas/User/properties/_id"
          },
          "body": {
            "type": "string",
            "description": "content body",
            "example": "# test\n\ntest\n"
          },
          "format": {
            "type": "string",
            "description": "format",
            "example": "markdown"
          },
          "path": {
            "type": "string",
            "description": "path",
            "example": "/user/alice/test"
          },
          "createdAt": {
            "type": "string",
            "description": "date created at",
            "example": "2010-01-01T00:00:00.000Z"
          }
        }
      },
      "V1Response": {
        "description": "Response v1",
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "description": "API is succeeded",
            "example": true
          }
        }
      }
    },
    "responses": {
      "403": {
        "description": "Forbidden"
      },
      "500": {
        "description": "Internal Server Error"
      }
    }
  },
  "paths": {
    "/comments.get": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "getComments",
        "summary": "/comments.get",
        "description": "Get comments of the page of the revision",
        "parameters": [
          {
            "in": "query",
            "name": "page_id",
            "schema": {
              "$ref": "#/components/schemas/Page/properties/_id"
            }
          },
          {
            "in": "query",
            "name": "revision_id",
            "schema": {
              "$ref": "#/components/schemas/Revision/properties/_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to get comments of the page of the revision.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/comments.add": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "addComment",
        "summary": "/comments.add",
        "description": "Post comment for the page",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "commentForm": {
                    "type": "object",
                    "properties": {
                      "page_id": {
                        "$ref": "#/components/schemas/Page/properties/_id"
                      },
                      "revision_id": {
                        "$ref": "#/components/schemas/Revision/properties/_id"
                      },
                      "comment": {
                        "$ref": "#/components/schemas/Comment/properties/comment"
                      },
                      "comment_position": {
                        "$ref": "#/components/schemas/Comment/properties/commentPosition"
                      }
                    }
                  }
                },
                "required": [
                  "commentForm"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to post comment for the page.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/comments.update": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "updateComment",
        "summary": "/comments.update",
        "description": "Update comment dody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "form": {
                    "type": "object",
                    "properties": {
                      "commentForm": {
                        "type": "object",
                        "properties": {
                          "page_id": {
                            "$ref": "#/components/schemas/Page/properties/_id"
                          },
                          "revision_id": {
                            "$ref": "#/components/schemas/Revision/properties/_id"
                          },
                          "comment_id": {
                            "$ref": "#/components/schemas/Comment/properties/_id"
                          },
                          "comment": {
                            "$ref": "#/components/schemas/Comment/properties/comment"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "form"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to update comment dody.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/comments.remove": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "removeComment",
        "summary": "/comments.remove",
        "description": "Remove specified comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment_id": {
                    "$ref": "#/components/schemas/Comment/properties/_id"
                  }
                },
                "required": [
                  "comment_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to remove specified comment.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "/login",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "loginForm": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirectTo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "/register",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registerForm": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirectTo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages.getPageTag": {
      "get": {
        "tags": [
          "Pages"
        ],
        "operationId": "getPageTag",
        "summary": "/pages.getPageTag",
        "description": "Get page tag",
        "parameters": [
          {
            "in": "query",
            "name": "pageId",
            "schema": {
              "$ref": "#/components/schemas/Page/properties/_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to get page tags.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/Tags"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pages.updatePost": {
      "get": {
        "tags": [
          "Pages"
        ],
        "operationId": "getUpdatePostPage",
        "summary": "/pages.updatePost",
        "description": "Get UpdatePost setting list",
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "schema": {
              "$ref": "#/components/schemas/Page/properties/path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to get UpdatePost setting list.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "updatePost": {
                      "$ref": "#/components/schemas/UpdatePost"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "searchPages",
        "summary": "/search",
        "description": "Search pages",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string",
              "description": "keyword",
              "example": "daily report"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "path",
            "schema": {
              "$ref": "#/components/schemas/Page/properties/path"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "$ref": "#/components/schemas/V1PaginateResult/properties/meta/properties/offset"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/V1PaginateResult/properties/meta/properties/limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to get list of pages.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ElasticsearchResult/properties/meta"
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "total count of pages",
                      "example": 35
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Page"
                      },
                      "description": "page list"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags.search": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "searchTags",
        "summary": "/tags.search",
        "description": "Search tags",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string",
              "description": "keyword",
              "example": "daily"
            },
            "description": "keyword to search"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to tag list.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/Tags"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags.update": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "updateTag",
        "summary": "/tags.update",
        "description": "Update tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "pageId": {
                    "$ref": "#/components/schemas/Page/properties/_id"
                  },
                  "revisionId": {
                    "$ref": "#/components/schemas/Revision/properties/_id"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/Tags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to update tag.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/Tags"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags.list": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "listTags",
        "summary": "/tags.list",
        "description": "Get tags",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/V1PaginateResult/properties/meta/properties/limit"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "$ref": "#/components/schemas/V1PaginateResult/properties/meta/properties/offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded to tag list.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user-activation/{token}": {
      "get": {
        "summary": "/user-activation/{token}",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User activation successful",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/attachments.uploadProfileImage": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "uploadProfileImage",
        "summary": "/attachments.uploadProfileImage",
        "description": "Upload profile image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment data"
                  },
                  "user": {
                    "type": "string",
                    "description": "user to set profile image"
                  }
                }
              },
              "encoding": {
                "path": {
                  "contentType": "application/x-www-form-urlencoded"
                }
              }
            },
            "*/*": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment data"
                  },
                  "user": {
                    "type": "string",
                    "description": "user to set profile"
                  }
                }
              },
              "encoding": {
                "path": {
                  "contentType": "application/x-www-form-urlencoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to add attachment.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    },
                    "attachment": {
                      "$ref": "#/components/schemas/AttachmentProfile"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/attachments.remove": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "removeAttachment",
        "summary": "/attachments.remove",
        "description": "Remove attachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attachment_id": {
                    "$ref": "#/components/schemas/Attachment/properties/_id"
                  }
                },
                "required": [
                  "attachment_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to remove attachment.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/attachments.removeProfileImage": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "removeProfileImage",
        "summary": "/attachments.removeProfileImage",
        "description": "Remove profile image",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "user to remove profile image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded to add attachment.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/V1Response/properties/ok"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Comments"
    },
    {
      "name": "Pages"
    },
    {
      "name": "Attachments"
    }
  ]
}